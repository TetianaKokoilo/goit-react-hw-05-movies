{"version":3,"file":"static/js/884.e3d4a98d.chunk.js","mappings":"8SACMA,EAAU,mCAEVC,EAAe,sCAGRC,EAAS,mCAAG,WAAOC,GAAP,yFACAC,EAAAA,EAAAA,IALJ,kDAK4B,CAC7CC,OAAQ,CACNC,QAASN,EACTG,KAAMA,EACNI,YAAa,MALM,uBACfC,EADe,EACfA,KADe,kBAQhBA,GARgB,2CAAH,sDAWTC,EAAY,mCAAG,WAAMC,GAAN,yFACHN,EAAAA,EAAAA,IAAA,UAAaH,EAAeU,OAAOD,IAAO,CAC/DL,OAAQ,CACNC,QAASN,KAHa,uBAClBQ,EADkB,EAClBA,KADkB,kBAMnBA,GANmB,2CAAH,sDASZI,EAAU,mCAAG,WAAMF,GAAN,yFACDN,EAAAA,EAAAA,IAAA,UAAaH,EAAeU,OAAOD,GAAnC,YAAkD,CACvEL,OAAQ,CACNC,QAASN,KAHW,uBAChBQ,EADgB,EAChBA,KADgB,kBAMjBA,GANiB,2CAAH,sDASVK,EAAU,mCAAG,WAAMH,GAAN,yFACDN,EAAAA,EAAAA,IAAA,UAAaH,EAAeU,OAAOD,GAAnC,YAAkD,CACvEL,OAAQ,CACNC,QAASN,KAHW,uBAChBQ,EADgB,EAChBA,KADgB,kBAMjBA,GANiB,2CAAH,sDASVM,EAAU,mCAAG,WAAOC,EAAaZ,GAApB,yFACFC,EAAAA,EAAAA,IAzCL,4CAyC2B,CAC1CC,OAAQ,CACNC,QAASN,EACTgB,MAAOD,EACPZ,KAAMA,KALc,uBACjBK,EADiB,EACjBA,KADiB,kBASjBA,GATiB,2CAAH,uD,gHCsBvB,UA9DqB,WAAO,IAAD,MACjBS,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MAajB,OAXAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,8GAEKhB,EAAAA,EAAAA,IAAaQ,GAFlB,OAERT,EAFQ,OAGda,EAAUb,GAHI,yEAKP,KAAIkB,SALG,yDAAH,qDAQfD,GACD,GAAE,CAACR,KAEF,6BACE,SAAC,KAAD,CAAMU,IAAI,UAAAL,EAASM,aAAT,eAAgBC,OAAQ,IAAlC,qBACCT,IACC,4BACE,0BACE,gBACEU,IAAG,0CAAqCV,EAAOW,aAC/CC,IAAKZ,EAAOa,WAGhB,wBAAKb,EAAOa,SACZ,qCACA,uBAAIb,EAAOc,YACX,oCAAYd,EAAOe,iBAEnB,qDAEE,2BACE,yBACE,SAAC,KAAD,CACER,GAAE,kBAAaV,EAAb,SACFW,MAAO,CAAEC,MAAM,UAAAP,EAASM,aAAT,eAAgBC,OAAQ,WAFzC,qBAOF,yBACE,SAAC,KAAD,CACEF,GAAE,kBAAaV,EAAb,YACFW,MAAO,CAAEC,MAAM,UAAAP,EAASM,aAAT,eAAgBC,OAAQ,WAFzC,iCAWV,SAAC,EAAAO,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QAIP,C","sources":["Api/Api.js","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = '2458b78fc78c2faaef19c7dfe7e5ebeb';\nconst API_TRENDING = 'https://api.themoviedb.org/3/trending/movie/day';\nconst API_MOVIE_ID = 'https://api.themoviedb.org/3/movie/';\nconst API_SEARCH = 'https://api.themoviedb.org/3/search/movie';\n\nexport const getMovies = async (page) => {\n  const { data } = await axios.get(API_TRENDING, {\n    params: {\n      api_key: API_KEY,\n      page: page,\n      total_pages: 12,\n    },\n  });\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await axios.get(`${API_MOVIE_ID + String(id)}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n\nexport const getCredits = async id => {\n  const { data } = await axios.get(`${API_MOVIE_ID + String(id)}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n\nexport const getReviews = async id => {\n  const { data } = await axios.get(`${API_MOVIE_ID + String(id)}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n\nexport const getKeyWord = async (searchQuery, page) => {\n  const {data } = await axios.get(API_SEARCH, {\n    params: {\n      api_key: API_KEY,\n      query: searchQuery,\n      page: page,\n    }\n  })\n\n  return data;\n}","import { useEffect, useState, Suspense } from 'react';\nimport { Outlet, useParams, Link, useLocation } from 'react-router-dom';\nimport { getMovieById } from 'Api/Api';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const data = await getMovieById(movieId);\n        setMovies(data);\n      } catch (err) {\n        return err.message;\n      }\n    };\n    fetchData();\n  }, [movieId]);\n  return (\n    <main>\n      <Link to={location.state?.from || '/'}>Go Back</Link>\n      {movies && (\n        <div>\n          <div>\n            <img\n              src={`https://image.tmdb.org/t/p/w500/${movies.poster_path}`}\n              alt={movies.title}\n            />\n          </div>\n          <h2>{movies.title}</h2>\n          <p>Overview</p>\n          <p>{movies.overview}</p>\n          <p>Rating: {movies.vote_average}</p>\n\n          <div>\n            Additional information\n            <ul>\n              <li>\n                <Link\n                  to={`/movies/${movieId}/cast`}\n                  state={{ from: location.state?.from || '/movies' }}\n                >\n                  Cast\n                </Link>\n              </li>\n              <li>\n                <Link\n                  to={`/movies/${movieId}/reviews`}\n                  state={{ from: location.state?.from || '/movies' }}\n                >\n                  Reviews\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n      )}\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\n\nexport default MovieDetails;"],"names":["API_KEY","API_MOVIE_ID","getMovies","page","axios","params","api_key","total_pages","data","getMovieById","id","String","getCredits","getReviews","getKeyWord","searchQuery","query","movieId","useParams","useState","movies","setMovies","location","useLocation","useEffect","fetchData","message","to","state","from","src","poster_path","alt","title","overview","vote_average","Suspense","fallback"],"sourceRoot":""}